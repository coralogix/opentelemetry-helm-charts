{
  "connectors": {},
  "exporters": {
    "coralogix": {
      "application_name": "eks-master",
      "application_name_attributes": [
        "k8s.cluster.name"
      ],
      "balancer_name": "",
      "domain": "coralogix.com",
      "domain_settings": {
        "balancer_name": "",
        "compression": "gzip"
      },
      "endpoint": "https://",
      "headers": {
        "ACCESS_TOKEN": "[REDACTED]",
        "appName": "[REDACTED]"
      },
      "logs": {
        "balancer_name": "",
        "compression": "gzip",
        "endpoint": "https://",
        "headers": {
          "X-Coralogix-Distribution": "[REDACTED]"
        }
      },
      "metrics": {
        "balancer_name": "",
        "compression": "gzip",
        "endpoint": "https://",
        "headers": {
          "X-Coralogix-Distribution": "[REDACTED]"
        },
        "write_buffer_size": 524288
      },
      "private_key": "[REDACTED]",
      "profiles": {
        "balancer_name": ""
      },
      "retry_on_failure": {
        "enabled": true,
        "initial_interval": "5s",
        "max_elapsed_time": "5m0s",
        "max_interval": "30s",
        "multiplier": 1.5,
        "randomization_factor": 0.5
      },
      "sending_queue": {
        "batch": null,
        "block_on_overflow": false,
        "blocking": false,
        "enabled": true,
        "num_consumers": 10,
        "queue_size": 1000,
        "sizer": {},
        "storage": null,
        "wait_for_result": false
      },
      "subsystem_name": "eks-master",
      "subsystem_name_attributes": [
        "k8s.deployment.name",
        "k8s.statefulset.name",
        "k8s.daemonset.name",
        "k8s.cronjob.name",
        "service.name"
      ],
      "timeout": "30s",
      "traces": {
        "balancer_name": "",
        "compression": "gzip",
        "endpoint": "https://",
        "headers": {
          "X-Coralogix-Distribution": "[REDACTED]"
        }
      }
    },
    "coralogix/resource_catalog": {
      "application_name": "resource",
      "application_name_attributes": [],
      "balancer_name": "",
      "domain": "coralogix.com",
      "domain_settings": {
        "balancer_name": "",
        "compression": "gzip"
      },
      "endpoint": "https://",
      "headers": {
        "ACCESS_TOKEN": "[REDACTED]",
        "appName": "[REDACTED]"
      },
      "logs": {
        "balancer_name": "",
        "compression": "gzip",
        "endpoint": "https://",
        "headers": {
          "X-Coralogix-Distribution": "[REDACTED]",
          "x-coralogix-ingress": "[REDACTED]"
        }
      },
      "metrics": {
        "balancer_name": "",
        "compression": "gzip",
        "endpoint": "https://",
        "write_buffer_size": 524288
      },
      "private_key": "[REDACTED]",
      "profiles": {
        "balancer_name": ""
      },
      "retry_on_failure": {
        "enabled": true,
        "initial_interval": "5s",
        "max_elapsed_time": "5m0s",
        "max_interval": "30s",
        "multiplier": 1.5,
        "randomization_factor": 0.5
      },
      "sending_queue": {
        "batch": null,
        "block_on_overflow": false,
        "blocking": false,
        "enabled": true,
        "num_consumers": 10,
        "queue_size": 1000,
        "sizer": {},
        "storage": null,
        "wait_for_result": false
      },
      "subsystem_name": "catalog",
      "subsystem_name_attributes": [],
      "timeout": "30s",
      "traces": {
        "balancer_name": "",
        "compression": "gzip",
        "endpoint": "https://"
      }
    },
    "debug": {
      "sampling_initial": 2,
      "sampling_thereafter": 1,
      "use_internal_logger": true
    }
  },
  "extensions": {
    "health_check": {
      "check_collector_pipeline": {
        "enabled": false,
        "exporter_failure_threshold": 5,
        "interval": "5m"
      },
      "cors": null,
      "endpoint": "10.8.141.169:13133",
      "idle_timeout": "0s",
      "path": "/",
      "read_header_timeout": "0s",
      "response_body": null,
      "response_headers": {},
      "tls": null,
      "write_timeout": "0s"
    },
    "k8s_observer": {
      "auth_type": "serviceAccount",
      "context": "",
      "node": "",
      "observe_ingresses": false,
      "observe_nodes": false,
      "observe_pods": true,
      "observe_services": false
    },
    "opamp": {
      "agent_description": {
        "include_resource_attributes": false,
        "non_identifying_attributes": {
          "cx.agent.type": "cluster-collector",
          "cx.cluster.name": "eks-master",
          "k8s.node.name": "ip-10-8-135-246.eu-west-1.compute.internal"
        }
      },
      "capabilities": {
        "reports_available_components": false,
        "reports_effective_config": true,
        "reports_health": true
      },
      "instance_uid": "",
      "ppid": 0,
      "ppid_poll_interval": "5s",
      "server": {
        "http": {
          "polling_interval": "2m0s"
        }
      }
    },
    "pprof": {
      "block_profile_fraction": 0,
      "endpoint": "localhost:1777",
      "mutex_profile_fraction": 0,
      "save_to_file": ""
    },
    "zpages": {
      "cors": null,
      "endpoint": "localhost:55679",
      "expvar": {
        "enabled": false
      },
      "idle_timeout": "0s",
      "read_header_timeout": "0s",
      "response_headers": {},
      "tls": null,
      "write_timeout": "0s"
    }
  },
  "processors": {
    "batch": {
      "metadata_cardinality_limit": 1000,
      "metadata_keys": [],
      "send_batch_max_size": 2048,
      "send_batch_size": 1024,
      "timeout": "1s"
    },
    "filter/k8s_extra_metrics": {
      "error_mode": "propagate",
      "logs": {
        "exclude": null,
        "include": null,
        "log_record": []
      },
      "metrics": {
        "datapoint": [],
        "exclude": null,
        "include": null,
        "metric": [
          "resource.attributes[\"service.name\"] == \"kubernetes-apiserver\" and name != \"kubernetes_build_info\"",
          "resource.attributes[\"service.name\"] == \"kubernetes-cadvisor\" and (name != \"container_fs_writes_total\" and name != \"container_fs_reads_total\" and name != \"container_fs_writes_bytes_total\" and name != \"container_fs_reads_bytes_total\" and name != \"container_fs_usage_bytes\" and name != \"container_cpu_cfs_throttled_periods_total\" and name != \"container_cpu_cfs_periods_total\")"
        ],
        "regexp": null
      },
      "spans": {
        "exclude": null,
        "include": null
      },
      "traces": {
        "span": [],
        "spanevent": []
      }
    },
    "filter/workflow": {
      "error_mode": "silent",
      "logs": {
        "exclude": null,
        "include": null,
        "log_record": [
          "body[\"object\"][\"kind\"] == \"Pod\" and not IsMatch(String(body[\"object\"][\"metadata\"][\"ownerReferences\"]), \".*StatefulSet.*|.*ReplicaSet.*|.*Job.*|.*DaemonSet.*\")",
          "body[\"kind\"] == \"Pod\" and not IsMatch(String(body[\"metadata\"][\"ownerReferences\"]), \".*StatefulSet.*|.*ReplicaSet.*|.*Job.*|.*DaemonSet.*\")"
        ]
      },
      "metrics": {
        "datapoint": [],
        "exclude": null,
        "include": null,
        "metric": [],
        "regexp": null
      },
      "spans": {
        "exclude": null,
        "include": null
      },
      "traces": {
        "span": [],
        "spanevent": []
      }
    },
    "filter/workflow-custom": {
      "error_mode": "silent",
      "logs": {
        "exclude": null,
        "include": null,
        "log_record": [
          "body[\"object\"][\"kind\"] == \"Job\"",
          "body[\"kind\"] == \"Job\"",
          "body[\"object\"][\"kind\"] == \"Node\"",
          "body[\"kind\"] == \"Node\""
        ]
      },
      "metrics": {
        "datapoint": [],
        "exclude": null,
        "include": null,
        "metric": [],
        "regexp": null
      },
      "spans": {
        "exclude": null,
        "include": null
      },
      "traces": {
        "span": [],
        "spanevent": []
      }
    },
    "k8sattributes": {
      "auth_type": "serviceAccount",
      "context": "",
      "exclude": {
        "pods": [
          {
            "name": "jaeger-agent"
          },
          {
            "name": "jaeger-collector"
          }
        ]
      },
      "extract": {
        "annotations": [],
        "labels": [],
        "metadata": [
          "k8s.namespace.name",
          "k8s.replicaset.name",
          "k8s.statefulset.name",
          "k8s.daemonset.name",
          "k8s.cronjob.name",
          "k8s.job.name",
          "k8s.node.name",
          "k8s.pod.name"
        ],
        "otel_annotations": false
      },
      "filter": {
        "fields": [],
        "labels": [],
        "namespace": "",
        "node": "",
        "node_from_env_var": ""
      },
      "passthrough": false,
      "pod_association": [
        {
          "sources": [
            {
              "from": "resource_attribute",
              "name": "k8s.pod.ip"
            }
          ]
        },
        {
          "sources": [
            {
              "from": "resource_attribute",
              "name": "k8s.pod.uid"
            }
          ]
        },
        {
          "sources": [
            {
              "from": "connection",
              "name": ""
            }
          ]
        },
        {
          "sources": [
            {
              "from": "resource_attribute",
              "name": "k8s.job.name"
            }
          ]
        }
      ],
      "wait_for_metadata": false,
      "wait_for_metadata_timeout": "10s"
    },
    "memory_limiter": {
      "check_interval": "5s",
      "limit_mib": 0,
      "limit_percentage": 80,
      "min_gc_interval_when_hard_limited": "0s",
      "min_gc_interval_when_soft_limited": "10s",
      "spike_limit_mib": 0,
      "spike_limit_percentage": 25
    },
    "metricstransform/k8s-dashboard": {
      "transforms": [
        {
          "action": "insert",
          "aggregation_type": "",
          "experimental_match_labels": {},
          "group_resource_labels": {},
          "include": "k8s.pod.phase",
          "match_type": "strict",
          "new_name": "kube_pod_status_qos_class",
          "operations": [],
          "submatch_case": ""
        },
        {
          "action": "insert",
          "aggregation_type": "",
          "experimental_match_labels": {},
          "group_resource_labels": {},
          "include": "k8s.pod.status_reason",
          "match_type": "strict",
          "new_name": "kube_pod_status_reason",
          "operations": [],
          "submatch_case": ""
        },
        {
          "action": "insert",
          "aggregation_type": "",
          "experimental_match_labels": {},
          "group_resource_labels": {},
          "include": "k8s.node.allocatable_cpu",
          "match_type": "strict",
          "new_name": "kube_node_info",
          "operations": [],
          "submatch_case": ""
        },
        {
          "action": "insert",
          "aggregation_type": "",
          "experimental_match_labels": {},
          "group_resource_labels": {},
          "include": "k8s.container.ready",
          "match_type": "strict",
          "new_name": "k8s.container.status.last_terminated_reason",
          "operations": [],
          "submatch_case": ""
        }
      ]
    },
    "resource/kube-events": {
      "attributes": [
        {
          "action": "upsert",
          "converted_type": "",
          "from_attribute": "",
          "from_context": "",
          "key": "service.name",
          "pattern": "",
          "value": "kube-events"
        },
        {
          "action": "upsert",
          "converted_type": "",
          "from_attribute": "",
          "from_context": "",
          "key": "k8s.cluster.name",
          "pattern": "",
          "value": "eks-master"
        }
      ]
    },
    "resource/metadata": {
      "attributes": [
        {
          "action": "upsert",
          "converted_type": "",
          "from_attribute": "",
          "from_context": "",
          "key": "k8s.cluster.name",
          "pattern": "",
          "value": "eks-master"
        },
        {
          "action": "upsert",
          "converted_type": "",
          "from_attribute": "",
          "from_context": "",
          "key": "cx.otel_integration.name",
          "pattern": "",
          "value": "coralogix-integration-helm"
        }
      ]
    },
    "resourcedetection/env": {
      "aks": {
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "attributes": [],
      "azure": {
        "resource_attributes": {
          "azure.resourcegroup.name": {
            "enabled": true
          },
          "azure.vm.name": {
            "enabled": true
          },
          "azure.vm.scaleset.name": {
            "enabled": true
          },
          "azure.vm.size": {
            "enabled": true
          },
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          }
        },
        "tags": []
      },
      "consul": {
        "address": "",
        "datacenter": "",
        "meta": {},
        "namespace": "",
        "resource_attributes": {
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          }
        },
        "token": "[REDACTED]",
        "token_file": ""
      },
      "detectors": [
        "system",
        "env"
      ],
      "docker": {
        "resource_attributes": {
          "host.name": {
            "enabled": true
          },
          "os.type": {
            "enabled": true
          }
        }
      },
      "ec2": {
        "fail_on_missing_metadata": false,
        "max_attempts": 3,
        "max_backoff": "20s",
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.image.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          },
          "host.type": {
            "enabled": true
          }
        },
        "tags": []
      },
      "ecs": {
        "resource_attributes": {
          "aws.ecs.cluster.arn": {
            "enabled": true
          },
          "aws.ecs.launchtype": {
            "enabled": true
          },
          "aws.ecs.task.arn": {
            "enabled": true
          },
          "aws.ecs.task.family": {
            "enabled": true
          },
          "aws.ecs.task.id": {
            "enabled": true
          },
          "aws.ecs.task.revision": {
            "enabled": true
          },
          "aws.log.group.arns": {
            "enabled": true
          },
          "aws.log.group.names": {
            "enabled": true
          },
          "aws.log.stream.arns": {
            "enabled": true
          },
          "aws.log.stream.names": {
            "enabled": true
          },
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          }
        }
      },
      "eks": {
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": false
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "elasticbeanstalk": {
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "deployment.environment": {
            "enabled": true
          },
          "service.instance.id": {
            "enabled": true
          },
          "service.version": {
            "enabled": true
          }
        }
      },
      "gcp": {
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "faas.id": {
            "enabled": true
          },
          "faas.instance": {
            "enabled": true
          },
          "faas.name": {
            "enabled": true
          },
          "faas.version": {
            "enabled": true
          },
          "gcp.cloud_run.job.execution": {
            "enabled": true
          },
          "gcp.cloud_run.job.task_index": {
            "enabled": true
          },
          "gcp.gce.instance.hostname": {
            "enabled": false
          },
          "gcp.gce.instance.name": {
            "enabled": false
          },
          "gcp.gce.instance_group_manager.name": {
            "enabled": true
          },
          "gcp.gce.instance_group_manager.region": {
            "enabled": true
          },
          "gcp.gce.instance_group_manager.zone": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          },
          "host.type": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": true
          }
        }
      },
      "headers": {},
      "heroku": {
        "resource_attributes": {
          "cloud.provider": {
            "enabled": true
          },
          "heroku.app.id": {
            "enabled": true
          },
          "heroku.dyno.id": {
            "enabled": true
          },
          "heroku.release.commit": {
            "enabled": true
          },
          "heroku.release.creation_timestamp": {
            "enabled": true
          },
          "service.instance.id": {
            "enabled": true
          },
          "service.name": {
            "enabled": true
          },
          "service.version": {
            "enabled": true
          }
        }
      },
      "idle_conn_timeout": "1m30s",
      "k8snode": {
        "auth_type": "serviceAccount",
        "context": "",
        "node_from_env_var": "",
        "resource_attributes": {
          "k8s.node.name": {
            "enabled": true
          },
          "k8s.node.uid": {
            "enabled": true
          }
        }
      },
      "kubeadm": {
        "auth_type": "serviceAccount",
        "context": "",
        "resource_attributes": {
          "k8s.cluster.name": {
            "enabled": true
          },
          "k8s.cluster.uid": {
            "enabled": true
          }
        }
      },
      "lambda": {
        "resource_attributes": {
          "aws.log.group.names": {
            "enabled": true
          },
          "aws.log.stream.names": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "faas.instance": {
            "enabled": true
          },
          "faas.max_memory": {
            "enabled": true
          },
          "faas.name": {
            "enabled": true
          },
          "faas.version": {
            "enabled": true
          }
        }
      },
      "max_idle_conns": 100,
      "openshift": {
        "address": "",
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": true
          }
        },
        "tls": {},
        "token": ""
      },
      "override": false,
      "system": {
        "hostname_sources": [],
        "resource_attributes": {
          "host.arch": {
            "enabled": false
          },
          "host.cpu.cache.l2.size": {
            "enabled": false
          },
          "host.cpu.family": {
            "enabled": false
          },
          "host.cpu.model.id": {
            "enabled": false
          },
          "host.cpu.model.name": {
            "enabled": false
          },
          "host.cpu.stepping": {
            "enabled": false
          },
          "host.cpu.vendor.id": {
            "enabled": false
          },
          "host.id": {
            "enabled": true
          },
          "host.ip": {
            "enabled": false
          },
          "host.mac": {
            "enabled": false
          },
          "host.name": {
            "enabled": true
          },
          "os.description": {
            "enabled": false
          },
          "os.type": {
            "enabled": true
          },
          "os.version": {
            "enabled": false
          }
        }
      },
      "timeout": "2s"
    },
    "resourcedetection/region": {
      "aks": {
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "attributes": [],
      "azure": {
        "resource_attributes": {
          "azure.resourcegroup.name": {
            "enabled": true
          },
          "azure.vm.name": {
            "enabled": true
          },
          "azure.vm.scaleset.name": {
            "enabled": true
          },
          "azure.vm.size": {
            "enabled": true
          },
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          }
        },
        "tags": []
      },
      "consul": {
        "address": "",
        "datacenter": "",
        "meta": {},
        "namespace": "",
        "resource_attributes": {
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          }
        },
        "token": "[REDACTED]",
        "token_file": ""
      },
      "detectors": [
        "gcp",
        "ec2",
        "azure"
      ],
      "docker": {
        "resource_attributes": {
          "host.name": {
            "enabled": true
          },
          "os.type": {
            "enabled": true
          }
        }
      },
      "ec2": {
        "fail_on_missing_metadata": false,
        "max_attempts": 3,
        "max_backoff": "20s",
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.image.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          },
          "host.type": {
            "enabled": true
          }
        },
        "tags": []
      },
      "ecs": {
        "resource_attributes": {
          "aws.ecs.cluster.arn": {
            "enabled": true
          },
          "aws.ecs.launchtype": {
            "enabled": true
          },
          "aws.ecs.task.arn": {
            "enabled": true
          },
          "aws.ecs.task.family": {
            "enabled": true
          },
          "aws.ecs.task.id": {
            "enabled": true
          },
          "aws.ecs.task.revision": {
            "enabled": true
          },
          "aws.log.group.arns": {
            "enabled": true
          },
          "aws.log.group.names": {
            "enabled": true
          },
          "aws.log.stream.arns": {
            "enabled": true
          },
          "aws.log.stream.names": {
            "enabled": true
          },
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          }
        }
      },
      "eks": {
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": false
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "elasticbeanstalk": {
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "deployment.environment": {
            "enabled": true
          },
          "service.instance.id": {
            "enabled": true
          },
          "service.version": {
            "enabled": true
          }
        }
      },
      "gcp": {
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "faas.id": {
            "enabled": true
          },
          "faas.instance": {
            "enabled": true
          },
          "faas.name": {
            "enabled": true
          },
          "faas.version": {
            "enabled": true
          },
          "gcp.cloud_run.job.execution": {
            "enabled": true
          },
          "gcp.cloud_run.job.task_index": {
            "enabled": true
          },
          "gcp.gce.instance.hostname": {
            "enabled": false
          },
          "gcp.gce.instance.name": {
            "enabled": false
          },
          "gcp.gce.instance_group_manager.name": {
            "enabled": true
          },
          "gcp.gce.instance_group_manager.region": {
            "enabled": true
          },
          "gcp.gce.instance_group_manager.zone": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          },
          "host.type": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": true
          }
        }
      },
      "headers": {},
      "heroku": {
        "resource_attributes": {
          "cloud.provider": {
            "enabled": true
          },
          "heroku.app.id": {
            "enabled": true
          },
          "heroku.dyno.id": {
            "enabled": true
          },
          "heroku.release.commit": {
            "enabled": true
          },
          "heroku.release.creation_timestamp": {
            "enabled": true
          },
          "service.instance.id": {
            "enabled": true
          },
          "service.name": {
            "enabled": true
          },
          "service.version": {
            "enabled": true
          }
        }
      },
      "idle_conn_timeout": "1m30s",
      "k8snode": {
        "auth_type": "serviceAccount",
        "context": "",
        "node_from_env_var": "",
        "resource_attributes": {
          "k8s.node.name": {
            "enabled": true
          },
          "k8s.node.uid": {
            "enabled": true
          }
        }
      },
      "kubeadm": {
        "auth_type": "serviceAccount",
        "context": "",
        "resource_attributes": {
          "k8s.cluster.name": {
            "enabled": true
          },
          "k8s.cluster.uid": {
            "enabled": true
          }
        }
      },
      "lambda": {
        "resource_attributes": {
          "aws.log.group.names": {
            "enabled": true
          },
          "aws.log.stream.names": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "faas.instance": {
            "enabled": true
          },
          "faas.max_memory": {
            "enabled": true
          },
          "faas.name": {
            "enabled": true
          },
          "faas.version": {
            "enabled": true
          }
        }
      },
      "max_idle_conns": 100,
      "openshift": {
        "address": "",
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": true
          }
        },
        "tls": {},
        "token": ""
      },
      "override": true,
      "system": {
        "hostname_sources": [],
        "resource_attributes": {
          "host.arch": {
            "enabled": false
          },
          "host.cpu.cache.l2.size": {
            "enabled": false
          },
          "host.cpu.family": {
            "enabled": false
          },
          "host.cpu.model.id": {
            "enabled": false
          },
          "host.cpu.model.name": {
            "enabled": false
          },
          "host.cpu.stepping": {
            "enabled": false
          },
          "host.cpu.vendor.id": {
            "enabled": false
          },
          "host.id": {
            "enabled": false
          },
          "host.ip": {
            "enabled": false
          },
          "host.mac": {
            "enabled": false
          },
          "host.name": {
            "enabled": true
          },
          "os.description": {
            "enabled": false
          },
          "os.type": {
            "enabled": true
          },
          "os.version": {
            "enabled": false
          }
        }
      },
      "timeout": "2s"
    },
    "resourcedetection/resource_catalog": {
      "aks": {
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "attributes": [],
      "azure": {
        "resource_attributes": {
          "azure.resourcegroup.name": {
            "enabled": false
          },
          "azure.vm.name": {
            "enabled": false
          },
          "azure.vm.scaleset.name": {
            "enabled": false
          },
          "azure.vm.size": {
            "enabled": false
          },
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": false
          },
          "host.name": {
            "enabled": false
          }
        },
        "tags": []
      },
      "consul": {
        "address": "",
        "datacenter": "",
        "meta": {},
        "namespace": "",
        "resource_attributes": {
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": true
          },
          "host.name": {
            "enabled": true
          }
        },
        "token": "[REDACTED]",
        "token_file": ""
      },
      "detectors": [
        "eks",
        "aks",
        "gcp",
        "ec2",
        "azure"
      ],
      "docker": {
        "resource_attributes": {
          "host.name": {
            "enabled": true
          },
          "os.type": {
            "enabled": true
          }
        }
      },
      "ec2": {
        "fail_on_missing_metadata": false,
        "max_attempts": 3,
        "max_backoff": "20s",
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "host.id": {
            "enabled": false
          },
          "host.image.id": {
            "enabled": false
          },
          "host.name": {
            "enabled": false
          },
          "host.type": {
            "enabled": false
          }
        },
        "tags": []
      },
      "ecs": {
        "resource_attributes": {
          "aws.ecs.cluster.arn": {
            "enabled": true
          },
          "aws.ecs.launchtype": {
            "enabled": true
          },
          "aws.ecs.task.arn": {
            "enabled": true
          },
          "aws.ecs.task.family": {
            "enabled": true
          },
          "aws.ecs.task.id": {
            "enabled": true
          },
          "aws.ecs.task.revision": {
            "enabled": true
          },
          "aws.log.group.arns": {
            "enabled": true
          },
          "aws.log.group.names": {
            "enabled": true
          },
          "aws.log.stream.arns": {
            "enabled": true
          },
          "aws.log.stream.names": {
            "enabled": true
          },
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          }
        }
      },
      "eks": {
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": false
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "elasticbeanstalk": {
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "deployment.environment": {
            "enabled": true
          },
          "service.instance.id": {
            "enabled": true
          },
          "service.version": {
            "enabled": true
          }
        }
      },
      "gcp": {
        "resource_attributes": {
          "cloud.account.id": {
            "enabled": true
          },
          "cloud.availability_zone": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "faas.id": {
            "enabled": true
          },
          "faas.instance": {
            "enabled": true
          },
          "faas.name": {
            "enabled": true
          },
          "faas.version": {
            "enabled": true
          },
          "gcp.cloud_run.job.execution": {
            "enabled": true
          },
          "gcp.cloud_run.job.task_index": {
            "enabled": true
          },
          "gcp.gce.instance.hostname": {
            "enabled": false
          },
          "gcp.gce.instance.name": {
            "enabled": false
          },
          "gcp.gce.instance_group_manager.name": {
            "enabled": true
          },
          "gcp.gce.instance_group_manager.region": {
            "enabled": true
          },
          "gcp.gce.instance_group_manager.zone": {
            "enabled": true
          },
          "host.id": {
            "enabled": false
          },
          "host.name": {
            "enabled": false
          },
          "host.type": {
            "enabled": false
          },
          "k8s.cluster.name": {
            "enabled": false
          }
        }
      },
      "headers": {},
      "heroku": {
        "resource_attributes": {
          "cloud.provider": {
            "enabled": true
          },
          "heroku.app.id": {
            "enabled": true
          },
          "heroku.dyno.id": {
            "enabled": true
          },
          "heroku.release.commit": {
            "enabled": true
          },
          "heroku.release.creation_timestamp": {
            "enabled": true
          },
          "service.instance.id": {
            "enabled": true
          },
          "service.name": {
            "enabled": true
          },
          "service.version": {
            "enabled": true
          }
        }
      },
      "idle_conn_timeout": "1m30s",
      "k8snode": {
        "auth_type": "serviceAccount",
        "context": "",
        "node_from_env_var": "",
        "resource_attributes": {
          "k8s.node.name": {
            "enabled": true
          },
          "k8s.node.uid": {
            "enabled": true
          }
        }
      },
      "kubeadm": {
        "auth_type": "serviceAccount",
        "context": "",
        "resource_attributes": {
          "k8s.cluster.name": {
            "enabled": true
          },
          "k8s.cluster.uid": {
            "enabled": true
          }
        }
      },
      "lambda": {
        "resource_attributes": {
          "aws.log.group.names": {
            "enabled": true
          },
          "aws.log.stream.names": {
            "enabled": true
          },
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "faas.instance": {
            "enabled": true
          },
          "faas.max_memory": {
            "enabled": true
          },
          "faas.name": {
            "enabled": true
          },
          "faas.version": {
            "enabled": true
          }
        }
      },
      "max_idle_conns": 100,
      "openshift": {
        "address": "",
        "resource_attributes": {
          "cloud.platform": {
            "enabled": true
          },
          "cloud.provider": {
            "enabled": true
          },
          "cloud.region": {
            "enabled": true
          },
          "k8s.cluster.name": {
            "enabled": true
          }
        },
        "tls": {},
        "token": ""
      },
      "override": true,
      "system": {
        "hostname_sources": [],
        "resource_attributes": {
          "host.arch": {
            "enabled": false
          },
          "host.cpu.cache.l2.size": {
            "enabled": false
          },
          "host.cpu.family": {
            "enabled": false
          },
          "host.cpu.model.id": {
            "enabled": false
          },
          "host.cpu.model.name": {
            "enabled": false
          },
          "host.cpu.stepping": {
            "enabled": false
          },
          "host.cpu.vendor.id": {
            "enabled": false
          },
          "host.id": {
            "enabled": false
          },
          "host.ip": {
            "enabled": false
          },
          "host.mac": {
            "enabled": false
          },
          "host.name": {
            "enabled": true
          },
          "os.description": {
            "enabled": false
          },
          "os.type": {
            "enabled": true
          },
          "os.version": {
            "enabled": false
          }
        }
      },
      "timeout": "2s"
    },
    "transform/entity-event": {
      "error_mode": "silent",
      "flatten_data": false,
      "log_statements": [
        {
          "conditions": [],
          "context": "log",
          "error_mode": "",
          "statements": [
            "set(attributes[\"otel.entity.interval\"], Milliseconds(Duration(\"1h\")))"
          ]
        }
      ],
      "metric_statements": [],
      "trace_statements": []
    },
    "transform/k8s-dashboard": {
      "error_mode": "ignore",
      "flatten_data": false,
      "log_statements": [],
      "metric_statements": [
        {
          "conditions": [],
          "context": "metric",
          "error_mode": "",
          "statements": [
            "set(unit, \"1\") where name == \"k8s.pod.phase\"",
            "set(unit, \"\") where name == \"kube_node_info\"",
            "set(unit, \"\") where name == \"k8s.container.status.last_terminated_reason\""
          ]
        },
        {
          "conditions": [],
          "context": "datapoint",
          "error_mode": "",
          "statements": [
            "set(value_int, 1) where metric.name == \"kube_pod_status_qos_class\"",
            "set(attributes[\"qos_class\"], resource.attributes[\"k8s.pod.qos_class\"]) where metric.name == \"kube_pod_status_qos_class\"",
            "set(attributes[\"pod\"], resource.attributes[\"k8s.pod.name\"]) where metric.name == \"kube_pod_status_reason\"",
            "set(attributes[\"reason\"], \"Evicted\") where metric.name == \"kube_pod_status_reason\" and value_int == 1",
            "set(attributes[\"reason\"], \"NodeAffinity\") where metric.name == \"kube_pod_status_reason\" and value_int == 2",
            "set(attributes[\"reason\"], \"NodeLost\") where metric.name == \"kube_pod_status_reason\" and value_int == 3",
            "set(attributes[\"reason\"], \"Shutdown\") where metric.name == \"kube_pod_status_reason\" and value_int == 4",
            "set(attributes[\"reason\"], \"UnexpectedAdmissionError\") where metric.name == \"kube_pod_status_reason\" and value_int == 5",
            "set(value_int, 0) where metric.name == \"kube_pod_status_reason\" and value_int == 6",
            "set(value_int, 1) where metric.name == \"kube_pod_status_reason\" and value_int != 0",
            "set(value_int, 1) where metric.name == \"kube_node_info\"",
            "set(attributes[\"kubelet_version\"], resource.attributes[\"k8s.kubelet.version\"]) where metric.name == \"kube_node_info\"",
            "set(value_int, 1) where metric.name == \"k8s.container.status.last_terminated_reason\"",
            "set(attributes[\"reason\"], \"\") where metric.name == \"k8s.container.status.last_terminated_reason\"",
            "set(attributes[\"reason\"], resource.attributes[\"k8s.container.status.last_terminated_reason\"]) where metric.name == \"k8s.container.status.last_terminated_reason\""
          ]
        },
        {
          "conditions": [],
          "context": "resource",
          "error_mode": "",
          "statements": [
            "delete_key(attributes, \"k8s.container.status.last_terminated_reason\")",
            "delete_key(attributes, \"k8s.pod.qos_class\")",
            "delete_key(attributes, \"k8s.kubelet.version\")"
          ]
        }
      ],
      "trace_statements": []
    },
    "transform/k8s_attributes": {
      "error_mode": "propagate",
      "flatten_data": false,
      "log_statements": [
        {
          "conditions": [],
          "context": "resource",
          "error_mode": "",
          "statements": [
            "set(attributes[\"k8s.deployment.name\"], attributes[\"k8s.replicaset.name\"])",
            "replace_pattern(attributes[\"k8s.deployment.name\"], \"^(.*)-[0-9a-zA-Z]+$\", \"$1\") where attributes[\"k8s.replicaset.name\"] != nil",
            "delete_key(attributes, \"k8s.replicaset.name\")"
          ]
        }
      ],
      "metric_statements": [
        {
          "conditions": [],
          "context": "resource",
          "error_mode": "",
          "statements": [
            "set(attributes[\"k8s.deployment.name\"], attributes[\"k8s.replicaset.name\"])",
            "replace_pattern(attributes[\"k8s.deployment.name\"], \"^(.*)-[0-9a-zA-Z]+$\", \"$1\") where attributes[\"k8s.replicaset.name\"] != nil",
            "delete_key(attributes, \"k8s.replicaset.name\")"
          ]
        }
      ],
      "trace_statements": [
        {
          "conditions": [],
          "context": "resource",
          "error_mode": "",
          "statements": [
            "set(attributes[\"k8s.deployment.name\"], attributes[\"k8s.replicaset.name\"])",
            "replace_pattern(attributes[\"k8s.deployment.name\"], \"^(.*)-[0-9a-zA-Z]+$\", \"$1\") where attributes[\"k8s.replicaset.name\"] != nil",
            "delete_key(attributes, \"k8s.replicaset.name\")"
          ]
        }
      ]
    },
    "transform/kube-events": {
      "error_mode": "propagate",
      "flatten_data": false,
      "log_statements": [
        {
          "conditions": [],
          "context": "log",
          "error_mode": "",
          "statements": [
            "keep_keys(body[\"object\"], [\"type\", \"eventTime\", \"reason\", \"regarding\", \"note\", \"metadata\", \"deprecatedFirstTimestamp\", \"deprecatedLastTimestamp\"])",
            "keep_keys(body[\"object\"][\"metadata\"], [\"creationTimestamp\"])",
            "keep_keys(body[\"object\"][\"regarding\"], [\"kind\", \"name\", \"namespace\"])"
          ]
        }
      ],
      "metric_statements": [],
      "trace_statements": []
    },
    "transform/kubernetes_transform": {
      "error_mode": "silent",
      "flatten_data": false,
      "log_statements": [
        {
          "conditions": [],
          "context": "",
          "error_mode": "",
          "statements": [
            "replace_all_patterns(log.body[\"object\"][\"metadata\"][\"labels\"], \"value\", \"^(?s).{257,}$\", \"[REDACTED]\")",
            "replace_all_patterns(log.body[\"object\"][\"metadata\"][\"annotations\"], \"value\", \"^(?s).{257,}$\", \"[REDACTED]\")",
            "replace_all_patterns(log.body[\"metadata\"][\"labels\"], \"value\", \"^(?s).{257,}$\", \"[REDACTED]\")",
            "replace_all_patterns(log.body[\"metadata\"][\"annotations\"], \"value\", \"^(?s).{257,}$\", \"[REDACTED]\")"
          ]
        }
      ],
      "metric_statements": [],
      "trace_statements": []
    },
    "transform/prometheus": {
      "error_mode": "ignore",
      "flatten_data": false,
      "log_statements": [],
      "metric_statements": [
        {
          "conditions": [],
          "context": "metric",
          "error_mode": "",
          "statements": [
            "replace_pattern(name, \"_total$\", \"\")"
          ]
        },
        {
          "conditions": [],
          "context": "resource",
          "error_mode": "",
          "statements": [
            "set(attributes[\"k8s.pod.ip\"], attributes[\"net.host.name\"]) where attributes[\"service.name\"] == \"opentelemetry-collector\"",
            "delete_key(attributes, \"service_name\") where attributes[\"service.name\"] == \"opentelemetry-collector\""
          ]
        },
        {
          "conditions": [],
          "context": "datapoint",
          "error_mode": "",
          "statements": [
            "delete_key(attributes, \"service_name\") where resource.attributes[\"service.name\"] == \"opentelemetry-collector\"",
            "delete_key(attributes, \"otel_scope_name\") where attributes[\"service.name\"] == \"opentelemetry-collector\""
          ]
        }
      ],
      "trace_statements": []
    },
    "transform/remove_managed_fields": {
      "error_mode": "silent",
      "flatten_data": false,
      "log_statements": [
        {
          "conditions": [],
          "context": "log",
          "error_mode": "",
          "statements": [
            "delete_key(body[\"object\"][\"metadata\"], \"managedFields\")",
            "delete_key(body[\"metadata\"], \"managedFields\")"
          ]
        }
      ],
      "metric_statements": [],
      "trace_statements": []
    }
  },
  "receivers": {
    "k8s_cluster": {
      "allocatable_types_to_report": [],
      "auth_type": "serviceAccount",
      "collection_interval": "30s",
      "context": "",
      "distribution": "kubernetes",
      "k8s_leader_elector": null,
      "metadata_collection_interval": "5m0s",
      "metadata_exporters": [],
      "metrics": {
        "k8s.container.cpu_limit": {
          "enabled": true
        },
        "k8s.container.cpu_request": {
          "enabled": true
        },
        "k8s.container.ephemeralstorage_limit": {
          "enabled": true
        },
        "k8s.container.ephemeralstorage_request": {
          "enabled": true
        },
        "k8s.container.memory_limit": {
          "enabled": true
        },
        "k8s.container.memory_request": {
          "enabled": true
        },
        "k8s.container.ready": {
          "enabled": true
        },
        "k8s.container.restarts": {
          "enabled": true
        },
        "k8s.container.storage_limit": {
          "enabled": true
        },
        "k8s.container.storage_request": {
          "enabled": true
        },
        "k8s.cronjob.active_jobs": {
          "enabled": true
        },
        "k8s.daemonset.current_scheduled_nodes": {
          "enabled": true
        },
        "k8s.daemonset.desired_scheduled_nodes": {
          "enabled": true
        },
        "k8s.daemonset.misscheduled_nodes": {
          "enabled": true
        },
        "k8s.daemonset.ready_nodes": {
          "enabled": true
        },
        "k8s.deployment.available": {
          "enabled": true
        },
        "k8s.deployment.desired": {
          "enabled": true
        },
        "k8s.hpa.current_replicas": {
          "enabled": true
        },
        "k8s.hpa.desired_replicas": {
          "enabled": true
        },
        "k8s.hpa.max_replicas": {
          "enabled": true
        },
        "k8s.hpa.min_replicas": {
          "enabled": true
        },
        "k8s.job.active_pods": {
          "enabled": true
        },
        "k8s.job.desired_successful_pods": {
          "enabled": true
        },
        "k8s.job.failed_pods": {
          "enabled": true
        },
        "k8s.job.max_parallel_pods": {
          "enabled": true
        },
        "k8s.job.successful_pods": {
          "enabled": true
        },
        "k8s.namespace.phase": {
          "enabled": true
        },
        "k8s.node.condition": {
          "enabled": false
        },
        "k8s.pod.phase": {
          "enabled": true
        },
        "k8s.pod.status_reason": {
          "enabled": true
        },
        "k8s.replicaset.available": {
          "enabled": true
        },
        "k8s.replicaset.desired": {
          "enabled": true
        },
        "k8s.replication_controller.available": {
          "enabled": true
        },
        "k8s.replication_controller.desired": {
          "enabled": true
        },
        "k8s.resource_quota.hard_limit": {
          "enabled": true
        },
        "k8s.resource_quota.used": {
          "enabled": true
        },
        "k8s.statefulset.current_pods": {
          "enabled": true
        },
        "k8s.statefulset.desired_pods": {
          "enabled": true
        },
        "k8s.statefulset.ready_pods": {
          "enabled": true
        },
        "k8s.statefulset.updated_pods": {
          "enabled": true
        },
        "openshift.appliedclusterquota.limit": {
          "enabled": true
        },
        "openshift.appliedclusterquota.used": {
          "enabled": true
        },
        "openshift.clusterquota.limit": {
          "enabled": true
        },
        "openshift.clusterquota.used": {
          "enabled": true
        }
      },
      "namespace": "",
      "node_conditions_to_report": [
        "Ready"
      ],
      "resource_attributes": {
        "container.id": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "container.image.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "container.image.tag": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "container.runtime": {
          "enabled": false,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "container.runtime.version": {
          "enabled": false,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.container.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.container.status.last_terminated_reason": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.cronjob.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.cronjob.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.daemonset.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.daemonset.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.deployment.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.deployment.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.hpa.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.hpa.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.job.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.job.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.kubelet.version": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.namespace.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.namespace.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.node.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.node.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.pod.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.pod.qos_class": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.pod.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.replicaset.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.replicaset.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.replicationcontroller.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.replicationcontroller.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.resourcequota.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.resourcequota.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.statefulset.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "k8s.statefulset.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "openshift.clusterquota.name": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "openshift.clusterquota.uid": {
          "enabled": true,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "os.description": {
          "enabled": false,
          "metrics_exclude": [],
          "metrics_include": []
        },
        "os.type": {
          "enabled": false,
          "metrics_exclude": [],
          "metrics_include": []
        }
      }
    },
    "k8sobjects": {
      "auth_type": "serviceAccount",
      "context": "",
      "error_mode": "propagate",
      "k8s_leader_elector": null,
      "objects": [
        {
          "exclude_watch_type": [
            "DELETED"
          ],
          "field_selector": "",
          "group": "events.k8s.io",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "events",
          "namespaces": [],
          "resource_version": ""
        }
      ]
    },
    "k8sobjects/resource_catalog": {
      "auth_type": "serviceAccount",
      "context": "",
      "error_mode": "propagate",
      "k8s_leader_elector": null,
      "objects": [
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "namespaces",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "nodes",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "persistentvolumeclaims",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "persistentvolumes",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "pods",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "apps",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "daemonsets",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "apps",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "deployments",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "apps",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "replicasets",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "apps",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "statefulsets",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "autoscaling",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "horizontalpodautoscalers",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "batch",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "cronjobs",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "batch",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "jobs",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "extensions",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "ingresses",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "networking.k8s.io",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "ingresses",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "policy",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "poddisruptionbudgets",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "rbac.authorization.k8s.io",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "clusterrolebindings",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "rbac.authorization.k8s.io",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "clusterroles",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "rbac.authorization.k8s.io",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "rolebindings",
          "namespaces": [],
          "resource_version": ""
        },
        {
          "exclude_watch_type": [],
          "field_selector": "",
          "group": "rbac.authorization.k8s.io",
          "interval": "0s",
          "label_selector": "",
          "mode": "watch",
          "name": "roles",
          "namespaces": [],
          "resource_version": ""
        }
      ]
    },
    "otlp": {
      "protocols": {
        "grpc": {
          "endpoint": "10.8.141.169:4317",
          "keepalive": {
            "enforcement_policy": {},
            "server_parameters": {}
          },
          "max_recv_msg_size_mib": 20,
          "read_buffer_size": 524288,
          "transport": "tcp"
        },
        "http": {
          "cors": {},
          "endpoint": "10.8.141.169:4318",
          "idle_timeout": "0s",
          "logs_url_path": "/v1/logs",
          "metrics_url_path": "/v1/metrics",
          "read_header_timeout": "0s",
          "response_headers": {},
          "tls": null,
          "traces_url_path": "/v1/traces",
          "write_timeout": "0s"
        }
      }
    },
    "prometheus": {
      "api_server": null,
      "config": {
        "global": {
          "evaluation_interval": "1m",
          "scrape_interval": "1m",
          "scrape_protocols": [
            "OpenMetricsText1.0.0",
            "OpenMetricsText0.0.1",
            "PrometheusText1.0.0",
            "PrometheusText0.0.4"
          ],
          "scrape_timeout": "10s"
        },
        "runtime": {
          "gogc": 75
        },
        "scrape_configs": [
          {
            "enable_compression": true,
            "enable_http2": true,
            "fallback_scrape_protocol": "PrometheusText0.0.4",
            "follow_redirects": true,
            "honor_timestamps": true,
            "job_name": "opentelemetry-collector",
            "metrics_path": "/metrics",
            "scheme": "http",
            "scrape_interval": "30s",
            "scrape_protocols": [
              "OpenMetricsText1.0.0",
              "OpenMetricsText0.0.1",
              "PrometheusText1.0.0",
              "PrometheusText0.0.4"
            ],
            "scrape_timeout": "10s",
            "static_configs": [
              {
                "targets": [
                  "10.8.141.169:8888"
                ]
              }
            ],
            "track_timestamps_staleness": false
          }
        ]
      },
      "report_extra_scrape_metrics": false,
      "start_time_metric_regex": "",
      "target_allocator": null,
      "trim_metric_suffixes": false,
      "use_start_time_metric": false
    },
    "prometheus/k8s_extra_metrics": {
      "api_server": null,
      "config": {
        "global": {
          "evaluation_interval": "1m",
          "scrape_interval": "1m",
          "scrape_protocols": [
            "OpenMetricsText1.0.0",
            "OpenMetricsText0.0.1",
            "PrometheusText1.0.0",
            "PrometheusText0.0.4"
          ],
          "scrape_timeout": "10s"
        },
        "runtime": {
          "gogc": 75
        },
        "scrape_configs": [
          {
            "authorization": {
              "credentials_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
              "type": "Bearer"
            },
            "enable_compression": true,
            "enable_http2": true,
            "fallback_scrape_protocol": "PrometheusText0.0.4",
            "follow_redirects": true,
            "honor_timestamps": true,
            "job_name": "kubernetes-apiserver",
            "kubernetes_sd_configs": [
              {
                "enable_http2": true,
                "follow_redirects": true,
                "kubeconfig_file": "",
                "role": "endpoints"
              }
            ],
            "metrics_path": "/metrics",
            "relabel_configs": [
              {
                "action": "keep",
                "regex": "default;kubernetes;https",
                "replacement": "$1",
                "separator": ";",
                "source_labels": [
                  "__meta_kubernetes_namespace",
                  "__meta_kubernetes_service_name",
                  "__meta_kubernetes_endpoint_port_name"
                ]
              }
            ],
            "scheme": "https",
            "scrape_interval": "1m",
            "scrape_protocols": [
              "OpenMetricsText1.0.0",
              "OpenMetricsText0.0.1",
              "PrometheusText1.0.0",
              "PrometheusText0.0.4"
            ],
            "scrape_timeout": "10s",
            "tls_config": {
              "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
              "insecure_skip_verify": true
            },
            "track_timestamps_staleness": false
          },
          {
            "authorization": {
              "credentials_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
              "type": "Bearer"
            },
            "enable_compression": true,
            "enable_http2": true,
            "fallback_scrape_protocol": "PrometheusText0.0.4",
            "follow_redirects": true,
            "honor_timestamps": true,
            "job_name": "kubernetes-cadvisor",
            "kubernetes_sd_configs": [
              {
                "enable_http2": true,
                "follow_redirects": true,
                "kubeconfig_file": "",
                "role": "node"
              }
            ],
            "metrics_path": "/metrics/cadvisor",
            "relabel_configs": [
              {
                "action": "labelmap",
                "regex": "__meta_kubernetes_node_label_(.+)",
                "replacement": "$1",
                "separator": ";"
              }
            ],
            "scheme": "https",
            "scrape_interval": "1m",
            "scrape_protocols": [
              "OpenMetricsText1.0.0",
              "OpenMetricsText0.0.1",
              "PrometheusText1.0.0",
              "PrometheusText0.0.4"
            ],
            "scrape_timeout": "10s",
            "tls_config": {
              "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
              "insecure_skip_verify": true
            },
            "track_timestamps_staleness": false
          }
        ]
      },
      "report_extra_scrape_metrics": false,
      "start_time_metric_regex": "",
      "target_allocator": null,
      "trim_metric_suffixes": false,
      "use_start_time_metric": false
    }
  },
  "service": {
    "extensions": [
      "health_check",
      "k8s_observer",
      "opamp",
      "zpages",
      "pprof"
    ],
    "pipelines": {
      "logs": {
        "exporters": [
          "coralogix"
        ],
        "processors": [
          "memory_limiter",
          "resource/metadata",
          "resource/kube-events",
          "resourcedetection/region",
          "resourcedetection/env",
          "k8sattributes",
          "transform/k8s_attributes",
          "transform/kube-events",
          "batch"
        ],
        "receivers": [
          "k8sobjects",
          "otlp"
        ]
      },
      "logs/resource_catalog": {
        "exporters": [
          "coralogix/resource_catalog"
        ],
        "processors": [
          "memory_limiter",
          "resourcedetection/resource_catalog",
          "transform/entity-event",
          "transform/remove_managed_fields",
          "filter/workflow",
          "filter/workflow-custom",
          "resource/metadata",
          "transform/kubernetes_transform",
          "batch"
        ],
        "receivers": [
          "k8sobjects/resource_catalog"
        ]
      },
      "metrics": {
        "exporters": [
          "coralogix"
        ],
        "processors": [
          "memory_limiter",
          "resource/metadata",
          "resourcedetection/region",
          "resourcedetection/env",
          "k8sattributes",
          "transform/k8s_attributes",
          "metricstransform/k8s-dashboard",
          "transform/k8s-dashboard",
          "filter/k8s_extra_metrics",
          "transform/prometheus",
          "batch"
        ],
        "receivers": [
          "k8s_cluster",
          "prometheus/k8s_extra_metrics",
          "prometheus",
          "otlp"
        ]
      },
      "traces": {
        "exporters": [
          "debug",
          "coralogix"
        ],
        "processors": [
          "memory_limiter",
          "resource/metadata",
          "resourcedetection/region",
          "resourcedetection/env",
          "k8sattributes",
          "transform/k8s_attributes",
          "batch"
        ],
        "receivers": [
          "otlp"
        ]
      }
    },
    "telemetry": {
      "logs": {
        "encoding": "json",
        "error_output_paths": [
          "stderr"
        ],
        "level": "info",
        "output_paths": [
          "stderr"
        ],
        "sampling": {
          "enabled": true,
          "initial": 10,
          "thereafter": 100,
          "tick": "10s"
        }
      },
      "metrics": {
        "level": "Normal",
        "readers": [
          {
            "pull": {
              "exporter": {
                "prometheus": {
                  "host": "10.8.141.169",
                  "port": 8888
                }
              }
            }
          }
        ]
      },
      "resource": {
        "cx.agent.type": "cluster-collector",
        "service.name": "opentelemetry-collector"
      }
    }
  }
}
