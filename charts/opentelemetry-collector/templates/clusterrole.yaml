{{- if or (.Values.clusterRole.create) (.Values.presets.kubernetesAttributes.enabled) (.Values.presets.clusterMetrics.enabled) (.Values.presets.kubeletMetrics.enabled) (.Values.presets.kubernetesEvents.enabled) (.Values.presets.mysql.metrics.enabled) (.Values.presets.kubernetesResources.enabled) (.Values.presets.profilesCollection.enabled) (.Values.presets.loadBalancing.k8s.enabled) (eq .Values.distribution "eks/fargate") -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "opentelemetry-collector.clusterRoleName" . }}
  labels:
    {{- include "opentelemetry-collector.labels" . | nindent 4 }}
  {{- if .Values.clusterRole.annotations }}
  annotations:
    {{- range $key, $value := .Values.clusterRole.annotations }}
    {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
    {{- end }}
  {{- end }}
rules:
  {{- if .Values.clusterRole.rules -}}
  {{ toYaml .Values.clusterRole.rules | nindent 2 -}}
  {{- end }}
  {{- if or (.Values.presets.kubernetesAttributes.enabled) (.Values.presets.mysql.metrics.enabled) (.Values.presets.profilesCollection.enabled) }}
  - apiGroups: [""]
    resources: ["pods", "namespaces"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  {{- end }}
  {{- if .Values.presets.clusterMetrics.enabled}}
  - apiGroups: [""]
    resources: ["events", "namespaces", "namespaces/status", "nodes", "nodes/spec", "pods", "pods/status", "replicationcontrollers", "replicationcontrollers/status", "resourcequotas", "services" ]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["daemonsets", "deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch"]
  {{- end}}
  {{- if or (.Values.presets.kubeletMetrics.enabled) (.Values.presets.kubernetesExtraMetrics.enabled)}}
  - apiGroups: [""]
    {{- if .Values.presets.kubernetesExtraMetrics.perNode  }}
    resources: ["nodes", "nodes/stats", "nodes/metrics"]
    {{- else }}
    resources: ["pods", "endpoints", "nodes/stats", "nodes/metrics", "nodes", "services"]
    {{- end }}
    verbs: ["get", "watch", "list"]
  - nonResourceURLs:
    - "/metrics"
    verbs: ["get"]
  {{- end }}
  {{- if .Values.presets.kubernetesEvents.enabled }}
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["watch", "list"]
  {{- end }}
  {{- if .Values.presets.kubernetesResources.enabled }}
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["aws-auth"]
    verbs: ["get"]
  - apiGroups: [""]
    resources:
    - namespaces
    - nodes
    - persistentvolumeclaims
    - persistentvolumes
    - pods
    - services
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["autoscaling"]
    resources:
    - horizontalpodautoscalers
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources:
    - cronjobs
    - jobs
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
    - ingresses
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources:
    - ingresses
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources:
    - poddisruptionbudgets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
    - clusterrolebindings
    - clusterroles
    - rolebindings
    - roles
    verbs: ["get", "list", "watch"]
  {{- end }}
  {{- if .Values.presets.loadBalancing.k8s.enabled }}
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["list", "watch", "get"]
  {{- end }}
  {{- if eq .Values.distribution "eks/fargate" }}
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - nodes/stats
      - services
      - endpoints
      - pods
      - pods/proxy
      - configmaps
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - nodes
    verbs: ["patch"]
  - nonResourceURLs:
    - "/metrics/cadvisor"
    verbs: ["get", "list", "watch"]
  {{- end }}
{{- end }}
